<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pcwk.ehr.product">

  <sql id="searchCondition">
    <choose>
      <when test="cateClass01 != 'none'">
			  <choose>
			      <when test="cateClass02 == 'none' and '' != cateClass02">
			        and c.top_no = #{cateId}
			        <choose>
			          <when test="'' != searchWord ">
			            and p.name LIKE '%' || #{searchWord} || '%'
			          </when>
			        </choose>
			      </when>
			      <when test="cateClass02 != 'none' and '' != cateClass02">
			        and p.category_no = #{cateId}
			        <choose>
			          <when test="'' != searchWord ">
			            and p.name LIKE '%' || #{searchWord} || '%'
			          </when>
			        </choose>
			      </when>
			  </choose>
			</when>
			<otherwise>
			  <choose>
	        <when test="'' != searchWord ">
	          and p.name LIKE '%' || #{searchWord} || '%'
	        </when>
	      </choose>
			</otherwise>
	  </choose> 
  </sql>
    
  <select id="doRetrieve" resultType="ProductVO" parameterType="SearchVO">
      SELECT A.*,B.*
      FROM(
          SELECT 
			TT1.rnum AS num,
			TT1.item_no AS itemNo,
			TT1.name,
			TT1.price,
			TT1.quantity,
			TT1.category_no AS categoryNo,
			TT1.image_no AS imageNo,
			TT1.production,
			TT1.weight,
			TO_CHAR(TT1.expired, 'YYYY-MM-DD HH24:MI:SS') AS expired,
			TT1.detail,
			TT1.discount,
			TT1.final_price AS finalPrice,
			TT1.sales,
			DECODE( TO_CHAR(LOCALTIMESTAMP,'YYYY-MM-DD'),  TO_CHAR(TT1.reg_dt,'YYYY-MM-DD')
			                ,TO_CHAR(TT1.reg_dt,'HH24:MI')
			                ,TO_CHAR(TT1.reg_dt,'YYYY-MM-DD')) as regDt,
			DECODE( TO_CHAR(LOCALTIMESTAMP,'YYYY-MM-DD'),  TO_CHAR(TT1.mod_dt,'YYYY-MM-DD')
			                ,TO_CHAR(TT1.mod_dt,'HH24:MI')
			                ,TO_CHAR(TT1.mod_dt,'YYYY-MM-DD')) as modDt       
          FROM (
            SELECT ROWNUM AS RNUM, T1.*
            FROM (
                SELECT p.*
                FROM product p, category c
                WHERE p.category_no = c.category_no  -- 조인 조건
               <include refid="searchCondition"/>
                ORDER BY p.mod_dt desc
            ) T1
            -- 종료 번호
            <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNo} - 1) + #{pageSize} ]]>
          ) TT1
          -- 시작번호
          <![CDATA[ WHERE RNUM >= #{pageSize} * (#{pageNo} - 1) + 1 ]]>
      ) A
      CROSS JOIN
      (
          SELECT COUNT(*) totalCnt
          FROM product p, category c
          WHERE p.category_no = c.category_no   -- 조인 조건
          <include refid="searchCondition"/>
      ) B
  </select>

  <select id="doSelectOne" parameterType="ProductVO" resultType="ProductVO">
      <![CDATA[
      SELECT
        item_no AS itemNo,
        name,
        price,
        quantity,
        category_no AS categoryNo,
        image_no AS imageNo,
        production,
        weight,
        TO_CHAR(expired, 'YYYYMMDD') AS expired,
        detail,
        discount,
        final_price AS finalPrice,
        sales,
        TO_CHAR(reg_dt, 'YYYY-MM-DD HH24:MI:SS') AS regDt,
        TO_CHAR(mod_dt, 'YYYY-MM-DD HH24:MI:SS') AS modDt
      FROM product
      WHERE item_no = #{itemNo}
      ]]>
  </select> 
  
  <select id="getCount" parameterType="ProductVO" resultType="int">
    SELECT COUNT(*) cnt
    FROM product
    WHERE category_no LIKE #{categoryNo} ||'%'
  </select>

  <!-- 카테고리별 전체 목록 조회 -->
  <!-- resultType이 ProductVO인데 호출하는 쪽에서 return타입이 LIST이면 LIST형태로 ProductVO를 넘겨줌 -->
  <select id="getALL" parameterType="ProductVO" resultType="ProductVO">
      SELECT
		    item_no AS itemNo,
		    name,
		    price,
		    quantity,
		    category_no AS categoryNo,
		    image_no AS imageNo,
		    production,
		    weight,
		    TO_CHAR(expired, 'YYYY-MM-DD HH24:MI:SS') AS expired,
		    detail,
		    discount,
		    final_price AS finalPrice,
		    sales,
		    TO_CHAR(reg_dt, 'YYYY-MM-DD HH24:MI:SS') AS regDt,
		    TO_CHAR(mod_dt, 'YYYY-MM-DD HH24:MI:SS') AS modDt
      FROM product
      WHERE category_no = #{categoryNo}
      ORDER BY category_no
  </select>


  <!-- itemNo(PK) 값으로 수정 -->
  <update id="doUpdate" parameterType="ProductVO">
      <![CDATA[
      UPDATE product
      SET
          name = #{name},
          price = #{price},
          quantity = #{quantity},
          category_no = #{categoryNo},
          image_no = #{imageNo},
          production = #{production},
          weight = #{weight},
          expired = TO_DATE( #{expired} , 'YYYYMMDD'),
          detail = #{detail},
          discount = #{discount},
          final_price = #{finalPrice},
          sales = #{sales},
          mod_dt = LOCALTIMESTAMP
      WHERE
          item_no = #{itemNo}
      ]]>
  </update>
  
  <insert id="doSave" parameterType="ProductVO">
	  INSERT INTO product (
		    name,
		    price,
		    quantity,
		    category_no,
		    image_no,
		    production,
		    weight,
		    expired,
		    detail,
		    discount,
		    final_price,
		    sales,
		    reg_dt,
		    mod_dt
		) VALUES (
		    #{name},
		    #{price},
		    #{quantity},
		    #{categoryNo},
		    #{imageNo},
		    #{production},
		    #{weight},
		    TO_DATE(#{expired}, 'YYYYMMDD'),
		    #{detail},
		    #{discount},
		    #{finalPrice},
		    #{sales},
		    LOCALTIMESTAMP,
		    LOCALTIMESTAMP
	  )
  </insert>

  <!-- itemNo(PK) 값으로 삭제 -->
  <delete id="doDelete" parameterType="ProductVO">
    DELETE FROM product
    WHERE item_no = #{itemNo}
  </delete>

</mapper>