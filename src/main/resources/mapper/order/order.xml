<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pcwk.ehr.order">


<sql id="searchCondition">
   <choose>
              <when test="  '3' == searchDiv  ">
         and order_date between trunc(add_months(LOCALTIMESTAMP,-2)+1)-to_char(LOCALTIMESTAMP,'dd')
and trunc(last_day(LOCALTIMESTAMP)) +0.9999421
        </when>
        <when test="  '6' == searchDiv ">
         and order_date between trunc(add_months(LOCALTIMESTAMP,-5)+1)-to_char(LOCALTIMESTAMP,'dd')
and trunc(last_day(LOCALTIMESTAMP)) +0.9999421
        </when>
        <when test="  '9' == searchDiv  ">
         and order_date between trunc(add_months(LOCALTIMESTAMP,-8)+1)-to_char(LOCALTIMESTAMP,'dd')
and trunc(last_day(LOCALTIMESTAMP)) +0.9999421
        </when> 
        <when test="  '12' == searchDiv  ">
         and order_date between trunc(add_months(LOCALTIMESTAMP,-11)+1)-to_char(LOCALTIMESTAMP,'dd')
and trunc(last_day(LOCALTIMESTAMP)) +0.9999421
        </when> 
        <when test="  '36' == searchDiv  ">
         and order_date between trunc(add_months(LOCALTIMESTAMP,-11)+1)-to_char(LOCALTIMESTAMP,'dd')
and trunc(last_day(LOCALTIMESTAMP)) +0.9999421
        </when> 
   </choose>
</sql>

<select id="doRetrieve" resultType="OrderVO" parameterType="OrderSearchVO">
select A.*, B.*
from (
    select 
        TT1.num,
        TT1.productName,
        TT1.same_order as sameOrder,
        TT1.payment_id as paymentId,
        TT1.sumprice as price,
        TT1.order_date as orderDate
    from (
        select
            rownum num,
            t1.*
        from (
            select
                case when count(*) = 1 then max(p.name)
                     else max(p.name) || ' 외 ' || count(*) || '건'
                end as productName,
                same_order, payment_id, sum(o.price) as sumPrice, order_date
            from ordering o, product p
            where 1=1
                and o.item_no = p.item_no
                and member_id = #{memberId}
                <include refid="searchCondition"/>            
            group by same_order, payment_id, order_date --, p.name
        ) T1
        <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNo} - 1) + #{pageSize} ]]>
    ) TT1
    <![CDATA[ WHERE NUM >= #{pageSize} * (#{pageNo} - 1) + 1 ]]>
) A
CROSS JOIN
(
    SELECT COUNT(*) totalCnt
    FROM ordering o, product p
    WHERE 1=1
        and o.item_no = p.item_no
        and o.member_id = #{memberId}
    <include refid="searchCondition"/>
) B

</select>


<select id="doRetrieveDetail" resultType="OrderVO" parameterType="SearchVO">
SELECT A.*,B.*
FROM(
	SELECT 
	    TT1.order_no AS orderNO,
	    TT1.same_order AS sameOrder,
	    TT1.member_id AS memberId,
	    TT1.item_no AS itemNO,
	    TT1.price,
	    TT1.payment_id AS paymentId,
	    TT1.name,
	    TT1.phone,
	    TT1.address,
	    TT1.request,
	    TT1.order_state AS orderState,
	    DECODE( TO_CHAR(LOCALTIMESTAMP,'YYYY-MM-DD'),  TO_CHAR(TT1.order_date,'YYYY-MM-DD')
	                    ,TO_CHAR(TT1.order_date,'HH24:MI')
	                    ,TO_CHAR(TT1.order_date,'YYYY-MM-DD')) as orderDate,
	    TT1.ProductName
	FROM (
	    SELECT ROWNUM AS RNUM, T1.*
	    FROM (
	        SELECT 
	            o.order_no, o.same_order, o.member_id, o.item_no, 
	            o.price, o.payment_id, o.name, o.phone, o.address,
	            o.request, o.order_state, o.order_date,
	            p.name as ProductName
	        FROM ordering o, product p
	        WHERE 1=1
	            and o.item_no = p.item_no
	            and o.member_id = #{memberId}
	        
	        ORDER BY order_no
	    ) T1
	    -- 종료 번호
	    <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNo} - 1) + #{pageSize} ]]>
	) TT1
	-- 시작번호
	<![CDATA[ WHERE ROWNUM >= #{pageSize} * (#{pageNo} - 1) + 1 ]]>
) A
CROSS JOIN
(
 SELECT COUNT(*) totalCnt
 FROM ordering o, product p
 WHERE 1=1
     and o.item_no = p.item_no
     and o.member_id = #{memberId}
    <include refid="searchCondition"/>
) B
</select>


<select id="doSelectOne" parameterType="OrderVO" resultType="OrderVO">
	<![CDATA[
		SELECT
		  order_no AS orderNO,
		  same_order AS sameOrder, 
		  member_id AS memberId,
		  item_no AS itemNO,
		  price,
		  payment_id AS paymentId,
		  name,
		  phone,
		  address,
		  request,
		  order_state AS orderState,
		  TO_CHAR(order_date, 'YYYY-MM-DD HH24:MI:SS') AS orderDate
		FROM ordering
		WHERE member_id = #{memberId}
	]]>
</select>

<select id="getCount" parameterType="OrderVO" resultType="int">
  SELECT COUNT(*) cnt
  FROM order
  WHERE order_no LIKE #{orderNO} ||'%'
</select>



<!-- resultType이 OrderVO인데 호출하는 쪽에서 return타입이 LIST이면 LIST형태로 ProductVO를 넘겨줌 -->
<select id="getALL" parameterType="OrderVO" resultType="orderVO">
SELECT
	order_no AS orderNO,
	same_order AS sameOrder,
	member_id AS memberId,
	item_no AS itemNO,
	price,
	payment_id AS paymentId,
	name,
	phone,
	address,
	request,
	order_state AS orderState,
	TO_CHAR(order_date, 'YYYY-MM-DD HH24:MI:SS') AS orderDate

FROM ordering
WHERE order_no = #{orderNO}
ORDER BY order_no
</select>



<update id="doUpdate" parameterType="OrderVO">
	<![CDATA[
	UPDATE ordering
	SET
  same_order  = #{sameOrder},
  member_id   = #{memberId},
  item_no     = #{itemNO},
  price       = #{price},
  payment_id  = #{paymentId},
  name        = #{name},
  phone       = #{phone},
  address     = #{address},
  request     = #{request},
  order_state = #{orderState},
  order_date  = LOCALTIMESTAMP,
  
WHERE
  order_no = :#{orderNO}
	]]>
</update>
    

<select id="doSave" parameterType="OrderVO">
	INSERT INTO ordering (
	order_no,
	same_order,
	member_id,
	item_no,
	price,
	payment_id,
	name,
	phone,
	address,
	request,
	order_state,
	order_date
) VALUES (
	ORDERNO_SEQUENCE.NEXTVAL,
	#{sameOrder},
	#{memberId},
	#{itemNO},
	#{price},
	#{paymentId},
	#{name},
	#{phone},
	#{address},
	#{request},
	'X',
	LOCALTIMESTAMP
	)
</select>


<delete id="doDelete" parameterType="OrderVO">
	DELETE FROM ordering
	WHERE order_no = #{orderNO}
</delete>

</mapper>